1) В строке содержутся слова и числа. Необходмо выделить числа и посчитать их сумму.

2) The file contains characters, whole numbers and floating point numbers.
        Write a class that has the following functionality: in a loop, a user enters the data type (one of them: char, int, double, String),
        in response, the application prints out to the console all the values of the corresponding types that exist in the file.
        If a user enters the word 'stop', then the application exits the loop. In other cases "Incorrect input" should be printed.
        Resolve the task using regular expressions.
        <p>
        Note: A 'String' should be considered a sequence of two and more characters.
        Characters - Latin or Cyrillic letters letters in upper or lower case (make sure to envisage
        that Cyrillic letters may be in the input file).

        Example of the original file:
        ————————————————————————-
        a bcd 43.43 432 и л фвыа 89 .98
        ————————————————————————-

 public static void main(String[] args) {


        Scanner scanner = new Scanner(System.in).useDelimiter(System.lineSeparator());

        try (BufferedReader bufferedReader = new BufferedReader(

                new InputStreamReader(new FileInputStream("part3.txt"), "UTF-8"))) {

            StringBuilder inputFromConsole = new StringBuilder();

            String dataFromFile = bufferedReader.readLine();

            String data = null;

            /*while (!(data = scanner.next()).equals("stop")) {
                inputFromConsole.append(data).append("\n");
            }*/

            String[] words = dataFromFile.split("\\s");

            while (!(data = scanner.next()).equals("stop")) {

                String regex = null;

                switch (data) {
                    case "char":
                        regex = "[a-zа-яA-ZА-Я]{1}";
                        break;
                    case "int":
                        regex = "\\d*";
                        break;
                    case "double":
                        regex = "[0-9]*?[.][0-9]+";
                        break;
                    case "String":
                        regex = "[a-zа-яA-ZА-Я]{2,}";
                        break;
                }

//                System.out.println("Datatype = " + data);

                for (int i = 0; i < words.length; i++) {

                    if (Pattern.matches(regex, words[i])) {
                        System.out.print(words[i] + "\t");
                    }
                }

//                System.out.println();

            }


//            final Pattern pattern = Pattern.compile("\\d*");//int
//            final Pattern pattern = Pattern.compile("[a-zа-яA-ZА-Я]{1}");//char
//            final Pattern pattern = Pattern.compile("[0-9]*?[.][0-9]+");//double
//        final Pattern pattern = Pattern.compile("[a-zа-яA-ZА-Я]{2,}");//String

        } catch (
                UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (
                IOException e) {
            e.printStackTrace();
        }
    }
}

1) Создать класс Автомобиль со свойствами: Название, Максимальная
скорость (в км/ч). Определить 2 виртуальных метода: метод «Стоимость» –стоимость автомобиля,
рассчитываемую по формуле. Максимальная скорость * 100 и метод «Обновление модели», увеличивающий
максимальную скорость на 10. Определить также метод «Информация»,
который возвращает строку, содержащую информацию об объекте:
Название, Максимальную скорость и Стоимость.
Создать также класс наследник Представительский автомобиль, в
котором переопределить методы: метод «Стоимость» возвращает число,
равное. Максимальная скорость * 250, а метод «Обновление модели»
увеличивает скорость на 5 км/ч.
В главной программе (либо по нажатию на кнопку) создать объект
класса Автомобиль с максимальной скоростью 140 км/ч и класса Представительский автомобиль с максимальной скоростью 160 км/ч.
Вывести на экран (или форму) информацию об автомобилях. Обновить
модели автомобилей и снова вывести информацию о них.

2) Создать класс Компьютер со свойствами: Частота процессора (в МГц),
количество ядер, объем памяти (в МБ), объем жесткого диска (в ГБ).
Определить два виртуальных метода: «Стоимость», возвращающую
примерную расчетную стоимость компьютера, рассчитываемую по
формуле. Частота процессора * количество ядер / 100 + количество
памяти / 80 + объем жесткого диска / 20 и логический метод «Пригодность», возвращающий истину (true), если частота процессора не менее
2000 МГц, количество ядер не менее 2, объем памяти не менее 2048 МБ,
и объем жесткого диска не менее 320 Гб. Определить также метод
«Информация», который возвращает строку, содержащую информацию
о компьютере: частоту процессора, количество ядер, объем памяти,
объем жесткого диска, стоимость и пригодность для наших нужд.
Создать также класс наследник Ноутбук, с дополнительным свойством.
Продолжительность автономной работы (в минутах) и переопределить
методы: метод «Стоимость» возвращает число, равное стоимости обычного компьютера + количество минут автономной работы / 10, а метод
«Пригодность» возвращает истину, тогда когда и ноутбук пригоден как
обычный компьютер, и Продолжительность автономной работы не
меньше 60 минут. В главной программе (либо по нажатию на кнопку)
создать обычный компьютер и ноутбук и вывести информацию о них.

3) Создать класс Самолет со свойствами: Марка, Модель, Максимальная
скорость (в км/ч), Максимальная высота (в метрах). Определить виртуальный метод «Стоимость» – стоимость самолета, рассчитываемую по
формуле Максимальная скорость * 1000 + Максимальная высота * 100
Определить также метод «Информация», который возвращает строку,
содержащую информацию об объекте: Марка, Модель, Максимальную
скорость, Максимальную высоту и Стоимость.
Создать также класс наследник Бомбардировщик, в котором переопределить метод «Стоимость», который вернет удвоенную стоимость
относительно формулы для класса Самолет. Также создать класс Истребитель – наследник класса Самолет, для которого переопределить
метод «Стоимость» как утроенную стоимость, относительно формулы
стоимости для Самолета.
В главной программе (либо по нажатию на кнопку) создать объект
класса Самолет, класса Бомбардировщик, класса Истребитель. Вывести на экран (или форму) информацию о самолетах
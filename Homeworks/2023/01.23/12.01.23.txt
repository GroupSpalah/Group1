Bytecode, compiliation, interpretation

1) Создать интерфейс Calculatable с методом calculateSquare и default метод print, который печатает название фигуры.
Создать абстрактный класс Figure с полями(длина стороны, высота), который реализует интерфейс Calculatable.
Создать классы Triangle, Parallelogram, Romb. В классах наследниках переопределить метод calculateSquare,
для расчета площади. Протестировать функционал.
2) Tasks from pdf file

Групповое упражнение №2
После ООП Java:
Должны выполнять задания в группе
ЧАСТЬ 1: КОДИРОВАНИЕ
++1. Создайте форму интерфейса с неопределенным
такие методы как calculateArea и
рассчитать периметр. Создайте 2 класса Circle &
Квадрат, который реализует функциональность, определенную в
Интерфейс формы. Протестируйте свой код.
++2. Мы должны рассчитать средний балл
полученные по трем предметам студентом А и
учащийся Б. Создайте класс «Отметки» с рефератом
метод getPercentage, который будет возвращаться
средний процент оценок. Предоставлять
реализация абстрактного метода в классах
«А» и «Б». Конструктор ученика А берет
оценки по трем предметам в качестве его параметров и
оценки по четырем предметам в качестве его параметров для
студент Б. Протестируйте свой код
++3. Создайте классный автомобиль, который будет иметь
следующие поля: carPrice и color и method
calculateSalePrice(), который должен возвращаться
цена автомобиля.
Создайте 2 подкласса: седан и грузовик. Грузовик
класс имеет поле как вес и имеет свой собственный
реализация метода calculateSalePrice()
в котором возвращенная цена рассчитывается как
следующее: если вес> 2000, то возвращенная цена
автомобиль должен включать 10% скидку, в противном случае 20%
скидка.
Класс Sedan имеет поле длины, а также
это собственная реализация
calculateSalePrice(): если длина седана >20
футов, то стоимость возвращаемого автомобиля должна включать 5%
скидка, иначе скидка 10%
4. Предоставьте реализацию для диаграммы ниже. Затем
создайте тестовый класс, в котором вам нужно создать объекты
Классы ChromeDriver, FirefoxDrive и SafariDriver и
посмотреть, какие методы им доступны.
2. ЧАСТЬ 2
Сначала обсудите каждую тему
и когда все члены команды чисты, тогда
Запишите видео с флипгридом всей группой:
https://flip.com/8b308dba
Вопросов:
1. Какие типы переменных у нас есть в
Джава. Дайте определение всем и объясните
различия
2. Что такое конструктор? Использование
конструктор в классе? Разница
между конструктором и методом?
Можем ли мы перегрузить конструктор?
3. Каково использование super и this?
Супер против этого? Супер () против супер.? это()
против этого.
4. Что такое наследование? Преимущества? Типы?
Объясните каждый тип
5. Что такое перегрузка? Как это может быть
достигнуто? Что мы можем перегрузить и
что мы не можем?
6. Что переопределяет? Как это может быть
достигнуто? Что мы можем переопределить и
что мы не можем?
7. Что такое полиморфизм? Виды
Полиморфизм? Различия между
Перегрузка и переопределение?
8. Какое конечное ключевое слово, его использование и
цель?
9. Что такое абстракция? Как мы можем
достичь абстракции в Java? Что такое
Интерфейс? Что такое абстрактный класс?
Интерфейс против абстрактного класса?